(this["webpackJsonppolyline-to-geojson"]=this["webpackJsonppolyline-to-geojson"]||[]).push([[0],{13:function(e,t,a){e.exports=a.p+"static/media/loading-animation.80a2dbc6.svg"},14:function(e,t,a){e.exports=a(21)},19:function(e,t,a){},21:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(11),o=a.n(i),l=(a(19),a(12)),s=a(1),c=a(2),u=a(4),m=a(3),d=a(5),p=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"componentDidMount",value:function(){var e=this;setTimeout((function(){return e.props.removeError(e.props.index)}),5e3)}},{key:"componentWillUnmount",value:function(){clearTimeout()}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"error"},this.props.message," ",r.a.createElement("div",{className:"close",onClick:function(){return e.props.removeError(e.props.index)}}))}}]),a}(n.Component),h=a(23),g=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",Object.assign({id:"drop-area"},this.props.dragProps,{className:this.props.inDragArea?"active":""}),r.a.createElement("input",{id:"file-chooser-input",type:"file",accept:".csv",onChange:function(t){return e.props.handleFile(t.target.files[0])}}),r.a.createElement("label",{className:"drag-area-button",htmlFor:"file-chooser-input"},"Drag your file here or click here to choose it from the list."),r.a.createElement("div",{id:"drag-area-overlay",className:this.props.inDragArea?"active":""},r.a.createElement("div",{className:"drag-area-overlay-text"},"Drop your file here.")))}}]),a}(n.Component),f=a(8),v=a.n(f),E=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).handleDragEnter=function(e){e.preventDefault(),e.stopPropagation(),n.dragDepth++,e.dataTransfer.items&&e.dataTransfer.items.length>0&&n.setState({inDragArea:!0})},n.handleDragLeave=function(e){e.preventDefault(),e.stopPropagation(),n.dragDepth--,n.dragDepth>0||n.setState({inDragArea:!1})},n.handleDragOver=function(e){e.preventDefault(),e.stopPropagation()},n.handleDrop=function(e){e.preventDefault(),e.stopPropagation(),n.setState({inDragArea:!1}),e.dataTransfer.items&&e.dataTransfer.items.length>0&&(e.dataTransfer.items.length>1?n.showError("Dragged too many files."):n.handleFile(e.dataTransfer.files[0]),e.dataTransfer.clearData(),n.dragDepth=0)},n.handleFile=function(e){if(null!==e&&void 0!==e){if("text/csv"!==e.type)return n.showError("Uploaded file is not a CSV file.");n.props.handleIsFileLoading(!0);var t=new FileReader,a=v()();t.onload=function(e){a.parseFileData(e.target.result).then((function(e){n.props.handleFileUpload(e)})).catch((function(e){n.showError(e.message),n.props.handleIsFileLoading(!1)}))},t.readAsText(e)}},n.showError=function(e){var t=n.state.errors;n.setState({errors:[].concat(Object(d.a)(t),[{id:Object(h.a)(),message:e}])})},n.removeError=function(e){var t=n.state.errors.filter((function(t){return t.id!==e}));n.setState({errors:Object(d.a)(t)})},n.state={inDragArea:!1,errors:[]},n.dragDepth=0,n.dragProps={onDragEnter:n.handleDragEnter,onDragLeave:n.handleDragLeave,onDragOver:n.handleDragOver,onDrop:n.handleDrop},n}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{id:"file-loader"},r.a.createElement(g,{dragProps:this.dragProps,inDragArea:this.state.inDragArea,handleFile:this.handleFile}),r.a.createElement("div",{className:"error-group"},this.state.errors.map((function(t){return r.a.createElement(p,{key:t.id,message:t.message,index:t.id,removeError:e.removeError})}))))}}]),a}(r.a.Component),b=a(9),y=function(e,t){return new Array(t-e+1).fill().map((function(t,a){return e+a}))},C=function(e,t,a,n){console.log(e.type),e.preventDefault();var r=parseInt(e.target.value);if("blur"===e.type||"enter"===e.key)return r>n&&(r=n),r<1&&(r=1),!isNaN(r)&&t(r),void a("");console.log(r),isNaN(r)?a(""):a(r)};function O(e){var t=e.currentPage,a=e.totalPages,i=e.rowsPerPage,o=e.setPage,l=e.setRowsPerPage,s=Object(n.useState)(1),c=Object(b.a)(s,1)[0],u=Object(n.useState)(""),m=Object(b.a)(u,2),p=m[0],h=m[1],g=function(e,t,a){var n=2*e+3;if(t>n+2){var r=Math.max(2,a-e),i=Math.min(t-1,a+e),o=y(r,i),l=r>2,s=t-i>1,c=n-(o.length+1);switch(!0){case!l&&s:var u=y(i+1,i+c);o=[].concat(Object(d.a)(o),Object(d.a)(u),["RIGHT"]);break;case l&&!s:var m=y(r-c,r-1);o=["LEFT"].concat(Object(d.a)(m),Object(d.a)(o));break;case l&&s:default:o=["LEFT"].concat(Object(d.a)(o),["RIGHT"])}return[1].concat(Object(d.a)(o),[t])}return y(1,t)}(c,a,t);return r.a.createElement("div",{className:"pagination"},g.map((function(e){return"LEFT"===e?r.a.createElement("button",{className:"arrow",onClick:function(){return o(t-c-1)},key:e},"\u2190"):"RIGHT"===e?r.a.createElement("button",{className:"arrow",onClick:function(){return o(t+c+1)},key:e},"\u2192"):r.a.createElement("button",{className:e===t?"active":void 0,onClick:function(){return o(e)},key:e},e)})),r.a.createElement("div",{className:"select-wrapper fit-content"},r.a.createElement("select",{value:i,onChange:function(e){return l(parseInt(e.target.value))}},r.a.createElement("option",{value:20},"20/page"),r.a.createElement("option",{value:50},"50/page"),r.a.createElement("option",{value:100},"100/page"))),r.a.createElement("span",{className:"desc"},"Jump To:"),r.a.createElement("input",{type:"number",min:1,max:a,value:p,onChange:function(e){return C(e,o,h,a)},onBlur:function(e){return C(e,o,h,a)}}))}var N=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state={currentPage:1,rowsPerPage:50,textFilter:"",sort:{columnId:null,isAscending:!1}},e.sortByColumnn=function(t,a){var n=t[e.state.sort.columnId],r=a[e.state.sort.columnId];return isNaN(Date.parse(n))||isNaN(Date.parse(r))?isNaN(parseFloat(n))||isNaN(parseFloat(r))?e.state.sort.isAscending?n.localeCompare(r):r.localeCompare(n):(n=parseFloat(n),r=parseFloat(r),e.state.sort.isAscending?n-r:r-n):(n=Date.parse(n),r=Date.parse(r),e.state.sort.isAscending?n-r:r-n)},e.handleSortColumn=function(t,a){t.preventDefault();var n=!0!==e.state.sort.isAscending||e.state.sort.columnId!==a;e.setState({sort:{columnId:a,isAscending:n}})},e}return Object(c.a)(a,[{key:"render",value:function(){var e=this,t=[];t=""!==this.state.textFilter?this.props.data.filter((function(t){return t.some((function(t){return t.includes(e.state.textFilter)}))})):this.props.data,null!==this.state.sort.columnId&&t.sort(this.sortByColumnn);var a=(this.state.currentPage-1)*this.state.rowsPerPage,n=a+this.state.rowsPerPage,i=t.slice(a,n);return r.a.createElement("div",{className:"section"},r.a.createElement("h2",null,"Data View"),r.a.createElement("div",{className:"data-editor"},r.a.createElement("div",{className:"filters"},r.a.createElement("div",{className:"input-icon"},r.a.createElement("span",{className:"icon search-icon"}),r.a.createElement("input",{id:"filterText",name:"filterText",value:this.state.textFilter,onChange:function(t){return e.setState({textFilter:t.target.value})},placeholder:"Filter table...",type:"text"}))),r.a.createElement("div",{className:"table"},r.a.createElement("table",null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"#"),this.props.columns.map((function(t,a){return r.a.createElement("th",{key:"th-".concat(a),onClick:function(t){return e.handleSortColumn(t,a)},className:e.state.sort.columnId===a?e.state.sort.isAscending?"asc":"desc":void 0},t," ",e.state.sort.columnId===a&&r.a.createElement("span",{className:"arrow"}))})))),r.a.createElement("tbody",null,i.map((function(e,t){return r.a.createElement("tr",{key:"tr-".concat(t)},r.a.createElement("td",null,a+t+1),e.map((function(e,t){return r.a.createElement("td",{key:"td-".concat(t)},e)})))}))))),r.a.createElement(O,{currentPage:this.state.currentPage,totalPages:Math.ceil(t.length/this.state.rowsPerPage),rowsPerPage:this.state.rowsPerPage,setPage:function(t){return e.setState({currentPage:t})},setRowsPerPage:function(t){return e.setState({rowsPerPage:t})}})))}}]),a}(n.Component),j=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{className:"section"},r.a.createElement("h2",{className:"success"},"File uploaded successfully!"),r.a.createElement("div",{className:"section-content"},"Found ",r.a.createElement("span",{style:{fontWeight:"bold"}},this.props.dataLength)," rows and ",r.a.createElement("span",{style:{fontWeight:"bold"}},this.props.columnsLength)," columns in uploaded file. Columns for Polyline, start timestamp and end timestamp should be assigned automatically if they were found. You can modify it below if it was done incorrectly."))}}]),a}(n.Component),F=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"reupload-file"},r.a.createElement("div",{className:"desc"},"Want to upload a new CSV file?"),r.a.createElement("button",{onClick:function(){return e.props.reinitialize()}},"Click here"))}}]),a}(n.Component),P=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,this.props.show&&r.a.createElement("div",{className:"section-option"},r.a.createElement("label",{htmlFor:this.props.id},this.props.title),r.a.createElement("div",{className:"select-wrapper"},r.a.createElement("select",{id:this.props.id,name:this.props.id,value:this.props.value,onChange:this.props.onChange},r.a.createElement("option",{value:null}),this.props.columns.map((function(e,t){return r.a.createElement("option",{key:t,value:t},e)}))))))}}]),a}(n.Component),w=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).handleChangeSectionOption=function(t){var a=parseInt(t.target.value);isNaN(a)&&(a=null),e.props.handleChangeOptionValue(t.target.name,a)},e}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"section"},r.a.createElement("h2",null,"Choose columns"),r.a.createElement("div",{className:"section-content"},r.a.createElement(P,{id:"polylineColumnId",title:"Polyline",value:this.props.polylineColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:!0}),r.a.createElement("div",{className:"section-option"},r.a.createElement("label",{htmlFor:"includePathAnimation"},"Include Path Animation?"),r.a.createElement("input",{type:"checkbox",id:"includePathAnimation",name:"includePathAnimation",checked:this.props.includePathAnimation,onChange:function(t){return e.props.handleChangeOptionValue(t.target.name,t.target.checked)}}),r.a.createElement("div",{className:"section-description"},"Checking this checkbox include start and end date in GeoJSON coordinates. Thanks to this, animating path through time will be possible.")),r.a.createElement(P,{id:"startTimestampColumnId",title:"Start Timestamp",value:this.props.startTimestampColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:this.props.includePathAnimation}),r.a.createElement(P,{id:"endTimestampColumnId",title:"End Timestamp",value:this.props.endTimestampColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:this.props.includePathAnimation})))}}]),a}(n.Component),I=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"section"},r.a.createElement("h2",null,"Export File"),r.a.createElement("div",{className:"section"},r.a.createElement("div",{className:"section-content"},"Set filename and click generate to download GeoJSON file.",r.a.createElement("div",{className:"section-option"},r.a.createElement("label",{htmlFor:"fileName"},"Filename"),r.a.createElement("input",{id:"fileName",name:"fileName",type:"text",value:this.props.fileName,onChange:function(t){return e.props.handleFileNameChange(t.target.value)}}),r.a.createElement("button",{className:"inline",onClick:this.props.generateGeoJSON},"Generate GeoJSON")))))}}]),a}(n.Component),D=a(13),k=a.n(D);var S=function(e){return r.a.createElement("div",{className:"loading"},r.a.createElement("img",{src:k.a,alt:"Loading animation"}),"Please wait")},T={columns:[],data:[],polylineColumnId:null,startTimestampColumnId:null,endTimestampColumnId:null,includePathAnimation:!1,isFileLoading:!1,isFileUploaded:!1,isGenerating:!1,fileName:"decoded-data"},A=function(e){Object(u.a)(a,e);var t=Object(m.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state=T,e.handleFileUpload=function(t){var a=t.columns,n=void 0===a?[]:a,r=t.data,i=void 0===r?[]:r,o=t.polylineColumnId,l=void 0===o?null:o,s=t.startTimestampColumnId,c=void 0===s?null:s,u=t.endTimestampColumnId,m=void 0===u?null:u;e.setState({columns:n,data:i,polylineColumnId:l,startTimestampColumnId:c,endTimestampColumnId:m,isFileUploaded:!0,isFileLoading:!1})},e.handleChangeOptionValue=function(t,a){return e.setState(Object(l.a)({},t,a))},e.handleIsFileLoading=function(t){return e.setState({isFileLoading:t})},e.handleIsGenerating=function(t){return e.setState({isGenerating:t})},e.handleFileNameChange=function(t){return e.setState({fileName:t})},e.generateGeoJSON=function(t){t.preventDefault(),e.handleIsGenerating(!0),v()().generateFeatureCollection(e.state.data,e.state.columns,e.state.polylineColumnId,e.state.startTimestampColumnId,e.state.endTimestampColumnId,e.state.includePathAnimation).then((function(t){e.saveData(t),e.handleIsGenerating(!1)})).catch((function(t){console.log(t.message),e.handleIsGenerating(!1)}))},e.saveData=function(t){var a=JSON.stringify(t),n=new Blob([a],{type:"application/json"}),r=URL.createObjectURL(n),i=document.createElement("a");document.body.appendChild(i),i.style="display: none",i.href=r,e.state.fileName?(i.download="".concat(e.state.fileName,".geojson"),i.click(),window.URL.revokeObjectURL(r),i.remove()):console.log("File name is empty")},e}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"section"},r.a.createElement("h1",null,"Polyline to GeoJSON Decoder"),r.a.createElement("div",{className:"section-content"},"Upload CSV file that contains Polyline values, which will be used to convert to GeoJSON coordinates. Optionally, your file can contain start timestamp and end timestamp for animating paths. Every available column will be converted into Feature properties.")),r.a.createElement("div",{className:"content"},!this.state.isFileLoading&&!this.state.isFileUploaded&&!this.state.isGenerating&&r.a.createElement(E,{handleFileUpload:this.handleFileUpload,handleIsFileLoading:this.handleIsFileLoading}),!this.state.isFileLoading&&this.state.isFileUploaded&&!this.state.isGenerating&&r.a.createElement(r.a.Fragment,null,r.a.createElement(j,{columnsLength:this.state.columns.length,dataLength:this.state.data.length}),r.a.createElement(I,{generateGeoJSON:this.generateGeoJSON,fileName:this.state.fileName,handleFileNameChange:this.handleFileNameChange}),r.a.createElement(w,{columns:this.state.columns,polylineColumnId:this.state.polylineColumnId,startTimestampColumnId:this.state.startTimestampColumnId,endTimestampColumnId:this.state.endTimestampColumnId,includePathAnimation:this.state.includePathAnimation,handleChangeOptionValue:this.handleChangeOptionValue}),r.a.createElement(N,{columns:this.state.columns,data:this.state.data}),r.a.createElement(F,{reinitialize:function(){return e.setState(T)}})),(this.state.isGenerating||this.state.isFileLoading)&&r.a.createElement(S,null)))}}]),a}(r.a.Component);o.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(A,null)),document.getElementById("root"))},8:function(e,t,a){var n=a(20),r=["parseFileData","generateFeatureCollection"];e.exports=function(){var e=new Worker(a.p+"6c75435e0729bf84e3d5.worker.js",{name:"[hash].worker.js"});return n(e,r),e}}},[[14,1,2]]]);
//# sourceMappingURL=main.fdcc6362.chunk.js.map