{"version":3,"sources":["images/loading-animation.svg","components/ErrorNotification.js","components/objects/DragArea.js","components/FileLoader.js","components/objects/Pagination.js","components/objects/Tooltip.js","components/objects/CellEditor.js","components/DataEditor.js","components/FileSummary.js","components/objects/ReuploadFile.js","components/objects/SectionOption.js","components/ColumnChooser.js","components/FileExport.js","components/objects/Loading.js","App.js","index.js","components/worker/FileDataWorker.js"],"names":["module","exports","ErrorNotification","setTimeout","props","removeError","index","clearTimeout","className","this","message","onClick","Component","DragArea","id","dragProps","inDragArea","type","accept","onChange","e","handleFile","target","files","htmlFor","FileLoader","handleDragEnter","preventDefault","stopPropagation","dragDepth","dataTransfer","items","length","setState","handleDragLeave","handleDragOver","handleDrop","showError","clearData","file","undefined","handleIsFileLoading","reader","FileReader","fileDataWorker","worker","onload","parseFileData","result","then","handleFileUpload","catch","error","readAsText","errors","state","uuid","filter","onDragEnter","onDragLeave","onDragOver","onDrop","map","key","React","range","start","end","Array","fill","_","handleJumpTo","setPage","setJumpToPage","totalPages","value","parseInt","isNaN","Pagination","currentPage","rowsPerPage","setRowsPerPage","useState","pageNeighbours","jumpToPage","pages","innerPages","startPage","Math","max","endPage","min","hiddenLeftPages","hiddenRightPages","pagesOffset","extraPages","createPagination","page","onBlur","onKeyPress","Tooltip","setCoordinates","coordinates","elementHeightWithOffset","tooltipRef","current","scrollHeight","top","left","parentHeight","show","isVisible","hide","createRef","ref","style","children","CellEditor","tdRef","handleOnMouseEnter","handleOnMouseLeave","offsetLeft","offsetTop","offsetParent","offsetHeight","onMouseEnter","onMouseLeave","substring","DataEditor","textFilter","sort","columnId","isAscending","sortByColumnn","a","b","firstValue","secondValue","Date","parse","parseFloat","localeCompare","handleSortColumn","handleCancelSortColumn","data","row","values","some","cell","includes","dataStart","dataEnd","partialData","slice","name","placeholder","columns","column","onContextMenu","rowIndex","cellIndex","rowId","handleEditCell","ceil","newPage","newRowsPerPage","FileSummary","fontWeight","dataLength","columnsLength","ReuploadFile","reinitialize","SectionOption","title","ColumnChooser","handleChangeSectionOption","handleChangeOptionValue","polylineColumnId","checked","includePathAnimation","startTimestampColumnId","endTimestampColumnId","FileExport","fileName","handleFileNameChange","generateGeoJSON","Loading","src","loadingAnimation","alt","initialState","isFileLoading","isFileUploaded","isGenerating","App","property","handleIsGenerating","columnIndex","findIndex","generateFeatureCollection","saveData","console","log","object","json","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","href","download","click","window","revokeObjectURL","remove","ReactDOM","render","StrictMode","getElementById","addMethods","methods","w","Worker"],"mappings":"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","file":"static/js/main.470df646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-animation.80a2dbc6.svg\";","import React, { Component } from 'react'\n\nexport class ErrorNotification extends Component {\n    componentDidMount() {\n        setTimeout(() => this.props.removeError(this.props.index), 5000);\n    }\n\n    componentWillUnmount() {\n        clearTimeout();\n    }\n\n    render() {\n        return (\n            <div className=\"error\">{this.props.message} <div className=\"close\" onClick={() => this.props.removeError(this.props.index)}/></div>\n        )\n    }\n}\n\nexport default ErrorNotification\n","import React, { Component } from 'react'\n\nexport class DragArea extends Component {\n    render() {\n        return (\n            <div id=\"drop-area\" {...this.props.dragProps} className={this.props.inDragArea ? \"active\" : \"\"}>\n                <input id=\"file-chooser-input\" type=\"file\" accept=\".csv\" onChange={e => this.props.handleFile(e.target.files[0])} />\n                <label className=\"drag-area-button\" htmlFor=\"file-chooser-input\">\n                    Drag your file here or click here to choose it from the list.\n                </label>\n                <div id=\"drag-area-overlay\" className={this.props.inDragArea ? \"active\" : \"\"}>\n                    <div className=\"drag-area-overlay-text\">\n                        Drop your file here.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DragArea\n","import React from 'react'\nimport ErrorNotification from './ErrorNotification';\nimport { v4 as uuid } from 'uuid'\nimport DragArea from './objects/DragArea';\nimport worker from 'workerize-loader!./worker/FileDataWorker' // eslint-disable-line import/no-webpack-loader-syntax\n\nclass FileLoader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inDragArea: false,\n            errors: []\n        }\n    \n        this.dragDepth = 0;\n    \n        this.dragProps = {\n            onDragEnter: this.handleDragEnter,\n            onDragLeave: this.handleDragLeave,\n            onDragOver: this.handleDragOver,\n            onDrop: this.handleDrop\n        }\n    }\n\n    handleDragEnter = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth++;\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({inDragArea: true});\n        }\n    }\n\n    handleDragLeave = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth--;\n        if(this.dragDepth > 0) return;\n        \n        this.setState({inDragArea: false});\n    }\n\n    handleDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        \n    }\n\n    handleDrop = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({inDragArea: false});\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            if(e.dataTransfer.items.length > 1)\n                this.showError(\"Dragged too many files.\")\n            else\n                this.handleFile(e.dataTransfer.files[0]);\n\n            e.dataTransfer.clearData();\n            this.dragDepth = 0;\n        }\n    }\n\n    handleFile = file => {\n        if(file !== null && file !== undefined) {\n            if(file.type !== \"text/csv\") return this.showError(\"Uploaded file is not a CSV file.\")\n\n            this.props.handleIsFileLoading(true);\n            var reader = new FileReader();\n            var fileDataWorker = worker();\n\n            reader.onload = e => {\n                fileDataWorker.parseFileData(e.target.result)\n                    .then(result => {\n                        this.props.handleFileUpload(result)\n                    })\n                    .catch(error => {\n                        this.showError(error.message);\n                        this.props.handleIsFileLoading(false);\n                    })\n            }\n\n            reader.readAsText(file);\n        }\n    }\n\n    showError = message => {\n        const errors = this.state.errors;\n        this.setState({ errors : [...errors, {\n            id: uuid(),\n            message\n        }] })\n    }\n\n    removeError = id => {\n        const errors = this.state.errors.filter(error => error.id !== id);\n        this.setState({ errors : [...errors] })\n    }\n\n    render() {\n        return (\n            <div id=\"file-loader\">\n                <DragArea dragProps={this.dragProps} inDragArea={this.state.inDragArea} handleFile={this.handleFile} />\n                <div className=\"error-group\">\n                    {this.state.errors.map(error => <ErrorNotification key={error.id} message={error.message} index={error.id} removeError={this.removeError} />)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileLoader;","import React, { useState } from 'react'\n\nconst range = (start, end) => {\n    return new Array(end - start + 1).fill().map((_, index) => start + index);\n}\n\nconst createPagination = (pageNeighbours, totalPages, currentPage) => {\n    const innerPages = pageNeighbours * 2 + 3;\n    const visiblePages = innerPages + 2;\n\n    if(totalPages > visiblePages) {\n        const startPage = Math.max(2, currentPage - pageNeighbours);\n        const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n        let pages = range(startPage, endPage);\n\n        const hiddenLeftPages = startPage > 2;\n        const hiddenRightPages = (totalPages - endPage) > 1;\n        const pagesOffset = innerPages - (pages.length + 1);\n\n        switch(true) {\n            case (!hiddenLeftPages && hiddenRightPages): {\n                let extraPages = range(endPage + 1, endPage + pagesOffset);\n                pages = [...pages, ...extraPages, 'RIGHT']\n                break;\n            }\n\n            case (hiddenLeftPages && !hiddenRightPages): {\n                let extraPages = range(startPage - pagesOffset, startPage - 1);\n                pages = ['LEFT', ...extraPages, ...pages]\n                break;\n            }\n\n            case (hiddenLeftPages && hiddenRightPages):\n            default: {\n                pages = ['LEFT', ...pages, 'RIGHT'];\n                break;\n            }\n        }\n\n        return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n}\n\nconst handleJumpTo = (e, setPage, setJumpToPage, totalPages) => {\n    e.preventDefault();\n    var value = parseInt(e.target.value);\n\n    if(e.type === 'blur' || e.key === 'Enter') {\n        if(value > totalPages) value = totalPages;\n        if(value < 1) value = 1;\n        !isNaN(value) && setPage(value);\n        setJumpToPage('');\n        return;\n    }\n\n    !isNaN(value) ? setJumpToPage(value) : setJumpToPage('');\n}\n\nexport default function Pagination({ currentPage, totalPages, rowsPerPage, setPage, setRowsPerPage }) {\n    const [pageNeighbours] = useState(1);\n    const [jumpToPage, setJumpToPage] = useState('');\n    const pages = createPagination(pageNeighbours, totalPages, currentPage);\n\n    return (\n        <div className=\"pagination\">\n            {pages.map(page => {\n                if(page === 'LEFT') return <button className=\"arrow\" onClick={() => setPage(currentPage - pageNeighbours - 1)} key={page}>←</button>\n                if(page === 'RIGHT') return <button className=\"arrow\" onClick={() => setPage(currentPage + pageNeighbours + 1)} key={page}>→</button>\n                return <button className={page === currentPage ? 'active' : undefined} onClick={() => setPage(page)} key={page}>{page}</button>\n            })}\n            <div className=\"select-wrapper fit-content\">\n                <select value={rowsPerPage} onChange={e => setRowsPerPage(parseInt(e.target.value))}>\n                    <option value={20}>20/page</option>\n                    <option value={50}>50/page</option>\n                    <option value={100}>100/page</option>\n                </select>\n            </div>\n            <span className=\"desc\">Jump To:</span>\n            <input type=\"number\"\n                min={1}\n                max={totalPages}\n                value={jumpToPage}\n                onChange={e => handleJumpTo(e, setPage, setJumpToPage, totalPages)}\n                onBlur={e => handleJumpTo(e, setPage, setJumpToPage, totalPages)}\n                onKeyPress={e => e.key === 'Enter' ? handleJumpTo(e, setPage, setJumpToPage, totalPages) : null}\n            />\n        </div>\n    )\n}\n","import React, { Component, createRef } from 'react'\n\nexport class Tooltip extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            left: 0,\n            top: 0,\n            isVisible: false\n        }\n\n        this.tooltipRef = createRef();\n    }\n\n    setCoordinates = coordinates => {\n        let elementHeightWithOffset = this.tooltipRef.current.scrollHeight + coordinates.top - 4;\n        let left = coordinates.left - 5;\n        let top = coordinates.top - 4;\n        this.setState({\n            left: left,\n            top: coordinates.parentHeight > elementHeightWithOffset ? top : top - (elementHeightWithOffset - coordinates.parentHeight)\n        })\n    }\n\n    show = () => {\n        this.setState({ isVisible: true })\n    }\n\n    hide = () => {\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <span ref={this.tooltipRef} className={this.state.isVisible ? \"tooltip show\" : \"tooltip\"} style={{left: this.state.left, top: this.state.top}}>\n                {this.props.children}\n            </span>\n        )\n    }\n}\n\nexport default Tooltip","import React, { Component } from 'react'\nimport Tooltip from './Tooltip'\n\nexport class CellEditor extends Component {\n    tdRef = React.createRef();\n    tooltipRef = React.createRef();\n\n    componentDidMount() {\n        if(this.tooltipRef.current !== null && this.tdRef.current !== null) {\n            let coordinates = {\n                left: this.tdRef.current.offsetLeft,\n                top: this.tdRef.current.offsetTop,\n                parentHeight: this.tdRef.current.offsetParent.offsetHeight\n            }\n            this.tooltipRef.current.setCoordinates(coordinates);\n        }\n    }\n\n    handleOnMouseEnter = e => {\n        e.preventDefault();\n        if(this.tooltipRef.current !== null)\n            this.tooltipRef.current.show();\n    }\n\n    handleOnMouseLeave = e => {\n        e.preventDefault();\n        if(this.tooltipRef.current !== null)\n            this.tooltipRef.current.hide();\n    }\n\n    render() {\n        return (\n            <td ref={this.tdRef} onMouseEnter={this.handleOnMouseEnter} onMouseLeave={this.handleOnMouseLeave}>\n                {this.props.value.length > 27 ? <>\n                    {this.props.value.substring(0, 26)}...\n                    <Tooltip ref={this.tooltipRef}>{this.props.value}</Tooltip>\n                </> : this.props.value}\n            </td>\n        )\n    }\n}\n\nexport default CellEditor\n","import React, { Component } from 'react'\nimport Pagination from './objects/Pagination';\nimport CellEditor from './objects/CellEditor';\n\nexport class DataEditor extends Component {\n    state = {\n        currentPage: 1,\n        rowsPerPage: 50,\n        textFilter: '',\n        sort: {\n            columnId: null,\n            isAscending: true\n        }\n    }\n\n    sortByColumnn = (a, b) => {\n        var firstValue = this.state.sort.columnId ? a[this.state.sort.columnId] : a;\n        var secondValue = this.state.sort.columnId ? b[this.state.sort.columnId]: b;\n\n        if(!isNaN(Date.parse(firstValue)) && !isNaN(Date.parse(secondValue))) {\n            firstValue = Date.parse(firstValue);\n            secondValue = Date.parse(secondValue);\n\n            if(this.state.sort.isAscending) return firstValue - secondValue;\n            return secondValue - firstValue;\n        }\n\n        if(!isNaN(parseFloat(firstValue)) && !isNaN(parseFloat(secondValue))) {\n            firstValue = parseFloat(firstValue);\n            secondValue = parseFloat(secondValue);\n\n            if(this.state.sort.isAscending) return firstValue - secondValue;\n            return secondValue - firstValue;\n        }\n\n        if(this.state.sort.isAscending) return firstValue.localeCompare(secondValue);\n        return secondValue.localeCompare(firstValue);\n    }\n\n    handleSortColumn = (e, index) => {\n        e.preventDefault();\n        this.setState({\n            sort: {\n                columnId: index,\n                isAscending: this.state.sort.columnId === index ? !this.state.sort.isAscending : true\n            }\n        });\n    }\n\n    handleCancelSortColumn = e => {\n        e.preventDefault();\n        this.setState({\n            sort: {\n                columnId: null,\n                isAscending: true\n            }\n        });\n    }\n\n    render() {\n        var data = [];\n        \n        if(this.state.textFilter !== '') data = this.props.data.filter(row => row.values.some(cell => cell.includes(this.state.textFilter)))\n        else data = this.props.data;\n        \n        if(this.state.sort.columnId !== null) data.sort((a, b) => this.sortByColumnn(a.values, b.values));\n        else data.sort((a, b) => this.sortByColumnn(a.index, b.index));\n\n        const dataStart = (this.state.currentPage - 1) * this.state.rowsPerPage;\n        const dataEnd = dataStart + this.state.rowsPerPage;\n        const partialData = data.slice(dataStart, dataEnd);\n\n        return (\n            <div className=\"section\">\n                <h2>Data View</h2>\n                <div className=\"data-editor\">\n                    <div className=\"filters\">\n                        <div className=\"input-icon\">\n                            <span className=\"icon search-icon\"></span>\n                            <input id=\"filterText\" name=\"filterText\" value={this.state.textFilter} onChange={e => this.setState({ textFilter: e.target.value })} placeholder=\"Filter table...\" type=\"text\" />\n                        </div>\n                    </div>\n                    <div className=\"table\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th className=\"row-number\">#</th>\n                                    {this.props.columns.map((column,index) => {\n                                        return <th\n                                            key={`th-${index}`}\n                                            onClick={e => this.handleSortColumn(e, index)}\n                                            onContextMenu={this.handleCancelSortColumn}\n                                            className={this.state.sort.columnId === index ? (this.state.sort.isAscending ? 'asc' : 'desc') : undefined}\n                                        >{column} {this.state.sort.columnId === index && <span className=\"arrow\"></span>}</th>\n                                        })}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {partialData.map((row, rowIndex) => {\n                                    return <tr key={`tr-${row.index}`}>\n                                        <td className=\"row-number\">{dataStart + rowIndex + 1}</td>\n                                        {row.values.map((cell, cellIndex)=> <CellEditor key={`td-${cellIndex}`} value={cell} columnId={cellIndex} rowId={rowIndex} handleEditCell={this.props.handleEditCell} />)}\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        currentPage={this.state.currentPage}\n                        totalPages={Math.ceil(data.length / this.state.rowsPerPage)}\n                        rowsPerPage={this.state.rowsPerPage}\n                        setPage={newPage => this.setState({ currentPage: newPage })}\n                        setRowsPerPage={newRowsPerPage => this.setState({ rowsPerPage: newRowsPerPage })}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataEditor\n","import React, { Component } from 'react'\n\nexport class FileSummary extends Component {\n    render() {\n        return (\n            <div className=\"section\">\n                <h2 className=\"success\">File uploaded successfully!</h2>\n                <div className=\"section-content\">\n                    Found <span style={{fontWeight: \"bold\"}}>{this.props.dataLength}</span> rows and <span style={{fontWeight: \"bold\"}}>{this.props.columnsLength}</span> columns in uploaded file.\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileSummary\n","import React, { Component } from 'react'\n\nexport class ReuploadFile extends Component {\n    render() {\n        return (\n            <div className=\"reupload-file\">\n                <div className=\"desc\">\n                    Want to upload a new CSV file?\n                </div>\n                <button onClick={() => this.props.reinitialize()}>Click here</button>\n            </div>\n        )\n    }\n}\n\nexport default ReuploadFile\n","import React, { Component } from 'react'\n\nexport class SectionOption extends Component {\n    render() {\n        return (\n            <>\n                {this.props.show && (<div className=\"section-option\">\n                    <label htmlFor={this.props.id}>{this.props.title}</label>\n                    <div className=\"select-wrapper\">\n                        <select id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange}>\n                            <option value={''}></option>\n                            {this.props.columns.map((column, index) => <option key={index} value={index}>{column}</option>)}\n                        </select>\n                    </div>\n                </div>)}\n            </>\n        )\n    }\n}\n\nexport default SectionOption\n","import React, { Component } from 'react'\nimport SectionOption from './objects/SectionOption'\n\nexport class ColumnChooser extends Component {\n    handleChangeSectionOption = e => {\n        var value = parseInt(e.target.value);\n        if(isNaN(value)) value = null\n        this.props.handleChangeOptionValue(e.target.name, value);\n    }\n\n    render() {\n        return (\n            <div className=\"section\">\n                <h2>Choose columns</h2>\n                <div className=\"section-content\">\n                    Columns for Polyline, start timestamp and end timestamp should be assigned automatically if they were found. You can modify it below if it was done incorrectly.\n                </div>\n                <div className=\"section-content\">\n                    <SectionOption id=\"polylineColumnId\" title=\"Polyline\" value={this.props.polylineColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={true} />\n\n                    <div className=\"section-option\">\n                        <label htmlFor=\"includePathAnimation\">Include Path Animation?</label>\n                        <input type=\"checkbox\" id=\"includePathAnimation\" name=\"includePathAnimation\" checked={this.props.includePathAnimation} onChange={e => this.props.handleChangeOptionValue(e.target.name, e.target.checked)} />\n                        <div className=\"section-description\">\n                            Checking this checkbox include start and end timestamps in GeoJSON coordinates. Thanks to this, animating path through time will be possible.\n                        </div>\n                    </div>\n\n                    <SectionOption id=\"startTimestampColumnId\" title=\"Start Timestamp\" value={this.props.startTimestampColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={this.props.includePathAnimation} />\n                    <SectionOption id=\"endTimestampColumnId\" title=\"End Timestamp\" value={this.props.endTimestampColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={this.props.includePathAnimation} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ColumnChooser\n","import React, { Component } from 'react'\n\nexport class FileExport extends Component {\n    render() {\n        return (\n            <div className=\"section\">\n                <h2>Export File</h2>\n                <div className=\"section\">\n                    <div className=\"section-content\">\n                        Set filename and click generate to download GeoJSON file.\n                        <div className=\"section-option\">\n                            <label htmlFor=\"fileName\">Filename</label>\n                            <input id=\"fileName\" name=\"fileName\" type=\"text\" value={this.props.fileName} onChange={e => this.props.handleFileNameChange(e.target.value)} />\n                            <button className=\"inline\" onClick={this.props.generateGeoJSON}>Generate GeoJSON</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileExport\n","import React from 'react'\nimport loadingAnimation from '../../images/loading-animation.svg'\n\nfunction Loading(props) {\n    return (\n        <div className=\"loading\">\n            <img src={loadingAnimation} alt=\"Loading animation\" />\n            Please wait...\n        </div>\n    )\n}\n\nexport default Loading\n\n","import React from 'react';\nimport FileLoader from './components/FileLoader';\nimport DataEditor from './components/DataEditor';\nimport FileSummary from './components/FileSummary';\nimport ReuploadFile from './components/objects/ReuploadFile';\nimport ColumnChooser from './components/ColumnChooser';\nimport FileExport from './components/FileExport';\nimport Loading from './components/objects/Loading';\nimport worker from 'workerize-loader!./components/worker/FileDataWorker' // eslint-disable-line import/no-webpack-loader-syntax\n\nconst initialState = {\n  columns: [],\n  data: [],\n  polylineColumnId: '',\n  startTimestampColumnId: '',\n  endTimestampColumnId: '',\n  includePathAnimation: false,\n\n  isFileLoading: false,\n  isFileUploaded: false,\n  isGenerating: false,\n\n  fileName: 'decoded-data'\n}\n\nclass App extends React.Component {\n  state = initialState;\n\n  handleFileUpload = ({columns = [], data = [], polylineColumnId = null, startTimestampColumnId = null, endTimestampColumnId = null}) => {\n    this.setState({\n      columns,\n      data,\n      polylineColumnId,\n      startTimestampColumnId,\n      endTimestampColumnId,\n      isFileUploaded: true,\n      isFileLoading: false\n    })\n  }\n\n  handleChangeOptionValue = (property, value) => this.setState({ [property]: value})\n  handleIsFileLoading = value => this.setState({ isFileLoading: value })\n  handleIsGenerating = value => this.setState({ isGenerating: value })\n  handleFileNameChange = value => this.setState({ fileName: value })\n\n  handleEditCell = (value, rowIndex, columnIndex) => {\n    let data = [...this.state.data];\n    let id = data.findIndex(row => row.index === rowIndex);\n    data[id].values[columnIndex] = value;\n    this.setState({\n      data: data\n    })\n  }\n\n  generateGeoJSON = e => {\n      e.preventDefault();\n      this.handleIsGenerating(true);\n      var fileDataWorker = worker();\n\n      fileDataWorker.generateFeatureCollection(this.state.data, this.state.columns, this.state.polylineColumnId, this.state.startTimestampColumnId, this.state.endTimestampColumnId, this.state.includePathAnimation)\n          .then(result => {\n              this.saveData(result);\n              this.handleIsGenerating(false);\n          }).catch(error => {\n              console.log(error.message);\n              this.handleIsGenerating(false);\n          })\n  }\n\n  saveData = object => {\n      var json = JSON.stringify(object);\n      var blob = new Blob([json], {type: \"application/json\"});\n      var url  = URL.createObjectURL(blob);\n\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      if(!this.state.fileName) {\n          console.log(\"File name is empty\")\n          return;\n      }\n      a.download = `${this.state.fileName}.geojson`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"section\">\n            <h1>Polyline to GeoJSON Decoder</h1>\n            <div className=\"section-content\">Upload CSV file that contains Polylines to convert them into GeoJSON. Optionally, your file can contain start timestamp and end timestamp for animating paths. Every available column will be converted into Feature properties.</div>\n        </div>\n        <div className=\"content\">\n          {(!this.state.isFileLoading && !this.state.isFileUploaded && !this.state.isGenerating) &&\n            <FileLoader\n              handleFileUpload={this.handleFileUpload}\n              handleIsFileLoading={this.handleIsFileLoading}\n            />}\n          {(!this.state.isFileLoading && this.state.isFileUploaded && !this.state.isGenerating) &&\n            <>\n              <FileSummary\n                columnsLength={this.state.columns.length}\n                dataLength={this.state.data.length}\n              />\n              <FileExport\n                generateGeoJSON={this.generateGeoJSON}\n                fileName={this.state.fileName}\n                handleFileNameChange={this.handleFileNameChange}\n              />\n              <ColumnChooser\n                columns={this.state.columns}\n                polylineColumnId={this.state.polylineColumnId}\n                startTimestampColumnId={this.state.startTimestampColumnId}\n                endTimestampColumnId={this.state.endTimestampColumnId}\n                includePathAnimation={this.state.includePathAnimation}\n                handleChangeOptionValue={this.handleChangeOptionValue}\n              />\n              <DataEditor\n                columns={this.state.columns}\n                data={this.state.data}\n                handleEditCell={this.handleEditCell}\n              />\n              <ReuploadFile reinitialize={() => this.setState(initialState)} />\n            </>\n          }\n          {(this.state.isGenerating || this.state.isFileLoading) && <Loading />}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"parseFileData\",\"generateFeatureCollection\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"b06ac8d00f59bc7a3b7c.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}