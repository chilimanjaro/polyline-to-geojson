(this["webpackJsonppolyline-to-geojson"]=this["webpackJsonppolyline-to-geojson"]||[]).push([[0],{10:function(e,t,a){var n=a(17),r=["parseFileData"];e.exports=function(){var e=new Worker(a.p+"264d81655d3b71a8148b.worker.js",{name:"[hash].worker.js"});return n(e,r),e}},11:function(e,t,a){e.exports=a(18)},16:function(e,t,a){},18:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(7),o=a.n(i),l=(a(16),a(8)),s=a(1),c=a(2),u=a(4),d=a(3),m=a(5),p=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"componentDidMount",value:function(){var e=this;setTimeout((function(){return e.props.removeError(e.props.index)}),5e3)}},{key:"componentWillUnmount",value:function(){clearTimeout()}},{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"error"},this.props.message," ",r.a.createElement("div",{className:"close",onClick:function(){return e.props.removeError(e.props.index)}}))}}]),a}(n.Component),h=a(20),v=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",Object.assign({id:"drop-area"},this.props.dragProps,{className:this.props.inDragArea?"active":""}),r.a.createElement("input",{id:"file-chooser-input",type:"file",accept:".csv",onChange:function(t){return e.props.handleFile(t.target.files[0])}}),r.a.createElement("label",{className:"drag-area-button",htmlFor:"file-chooser-input"},"Drag your file here or click here to choose it from the list."),r.a.createElement("div",{id:"drag-area-overlay",className:this.props.inDragArea?"active":""},r.a.createElement("div",{className:"drag-area-overlay-text"},"Drop your file here.")))}}]),a}(n.Component),f=a(9),g=a.n(f);var E=function(e){return r.a.createElement("div",{className:"loading"},r.a.createElement("img",{src:g.a,alt:"Loading animation"}),"Please wait")},b=a(10),O=a.n(b),y=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(e){var n;return Object(s.a)(this,a),(n=t.call(this,e)).handleDragEnter=function(e){e.preventDefault(),e.stopPropagation(),n.dragDepth++,e.dataTransfer.items&&e.dataTransfer.items.length>0&&n.setState({inDragArea:!0})},n.handleDragLeave=function(e){e.preventDefault(),e.stopPropagation(),n.dragDepth--,n.dragDepth>0||n.setState({inDragArea:!1})},n.handleDragOver=function(e){e.preventDefault(),e.stopPropagation()},n.handleDrop=function(e){e.preventDefault(),e.stopPropagation(),n.setState({inDragArea:!1}),e.dataTransfer.items&&e.dataTransfer.items.length>0&&(e.dataTransfer.items.length>1?n.showError("Dragged too many files."):n.handleFile(e.dataTransfer.files[0]),e.dataTransfer.clearData(),n.dragDepth=0)},n.handleFile=function(e){if(null!==e&&void 0!==e){if("text/csv"!==e.type)return void n.showError("Uploaded file is not a CSV file.");n.setState({isFileLoading:!0});var t=new FileReader,a=O()();t.onload=function(e){a.parseFileData(e.target.result).then((function(e){n.props.handleFileUpload(e)})).catch((function(e){n.showError(e.message),n.setState({isFileLoading:!1})}))},t.readAsText(e)}},n.showError=function(e){var t=n.state.errors;n.setState({errors:[].concat(Object(m.a)(t),[{id:Object(h.a)(),message:e}])})},n.removeError=function(e){var t=n.state.errors.filter((function(t){return t.id!==e}));n.setState({errors:Object(m.a)(t)})},n.state={inDragArea:!1,isFileLoading:!1,errors:[]},n.dragDepth=0,n.dragProps={onDragEnter:n.handleDragEnter,onDragLeave:n.handleDragLeave,onDragOver:n.handleDragOver,onDrop:n.handleDrop},n}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{id:"file-loader"},!this.state.isFileLoading&&!this.props.isFileUploaded&&r.a.createElement(v,{dragProps:this.dragProps,inDragArea:this.state.inDragArea,handleFile:this.handleFile}),this.state.isFileLoading&&r.a.createElement(E,null),r.a.createElement("div",{className:"error-group"},this.state.errors.map((function(t){return r.a.createElement(p,{key:t.id,message:t.message,index:t.id,removeError:e.removeError})}))))}}]),a}(r.a.Component),C=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("h2",null,"Data Editor")}}]),a}(n.Component),j=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("h2",null,"File Export")}}]),a}(n.Component),D=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{className:"section"},r.a.createElement("h2",{className:"success"},"File loaded successfully!"),r.a.createElement("div",{className:"section-content"},"Found ",r.a.createElement("span",{style:{fontWeight:"bold"}},this.props.dataLength)," rows and ",r.a.createElement("span",{style:{fontWeight:"bold"}},this.props.columnsLength)," columns in uploaded file. Columns for Polyline, start timestamp and end timestamp should be assigned automatically if they were found. You can modify it below if it was done incorrectly."))}}]),a}(n.Component),F=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"section"},r.a.createElement("h2",null,"Want to upload another file?"),r.a.createElement("div",{className:"section-content"},"Click button below to upload a new file. This will remove previously uploaded data.",r.a.createElement("button",{onClick:function(){return e.props.reinitialize()}},"Reupload file")))}}]),a}(n.Component),w=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){return Object(s.a)(this,a),t.apply(this,arguments)}return Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,this.props.show&&r.a.createElement("div",{className:"section-option"},r.a.createElement("label",{htmlFor:this.props.id},this.props.title),r.a.createElement("div",{className:"select-wrapper"},r.a.createElement("select",{id:this.props.id,name:this.props.id,value:this.props.value,onChange:this.props.onChange},r.a.createElement("option",{value:null}),this.props.columns.map((function(e,t){return r.a.createElement("option",{key:t,value:t},e)}))))))}}]),a}(n.Component),k=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).handleChangeSectionOption=function(t){var a=parseInt(t.target.value);isNaN(a)&&(a=null),e.props.handleChangeOptionValue(t.target.name,a)},e}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"section"},r.a.createElement("h2",null,"Choose columns"),r.a.createElement("div",{className:"section-content"},r.a.createElement(w,{id:"polylineColumnId",title:"Polyline",value:this.props.polylineColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:!0}),r.a.createElement("div",{className:"section-option"},r.a.createElement("label",{htmlFor:"includePathAnimation"},"Include Path Animation?"),r.a.createElement("input",{type:"checkbox",id:"includePathAnimation",name:"includePathAnimation",checked:this.props.includePathAnimation,onChange:function(t){return e.props.handleChangeOptionValue(t.target.name,t.target.checked)}}),r.a.createElement("div",{className:"section-description"},"Checking this checkbox will set if start and end date should be included in GeoJSON coordinates. Thank to this, animating path through time will be possible.")),r.a.createElement(w,{id:"startTimestampColumnId",title:"Start Timestamp",value:this.props.startTimestampColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:this.props.includePathAnimation}),r.a.createElement(w,{id:"endTimestampColumnId",title:"End Timestamp",value:this.props.endTimestampColumnId,onChange:this.handleChangeSectionOption,columns:this.props.columns,show:this.props.includePathAnimation})))}}]),a}(n.Component),T={columns:[],data:[],polylineColumnId:null,startTimestampColumnId:null,endTimestampColumnId:null,includePathAnimation:!1,isFileUploaded:!1},N=function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(){var e;Object(s.a)(this,a);for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return(e=t.call.apply(t,[this].concat(r))).state=T,e.handleFileUpload=function(t){var a=t.columns,n=void 0===a?[]:a,r=t.data,i=void 0===r?[]:r,o=t.polylineColumnId,l=void 0===o?null:o,s=t.startTimestampColumnId,c=void 0===s?null:s,u=t.endTimestampColumnId,d=void 0===u?null:u;e.setState({columns:n,data:i,polylineColumnId:l,startTimestampColumnId:c,endTimestampColumnId:d,isFileUploaded:!0})},e.handleChangeOptionValue=function(t,a){return e.setState(Object(l.a)({},t,a))},e}return Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"app-description"},r.a.createElement("h1",null,"Polyline to GeoJSON Decoder"),r.a.createElement("p",null,"Upload CSV file that contains Polyline values, which will be used to convert to GeoJSON coordinates. Optionally, your file can contain start timestamp and end timestamp for animating paths. Every available column will be converted into Feature properties.")),r.a.createElement("div",{className:"content"},!this.state.isFileUploaded&&r.a.createElement(y,{handleFileUpload:this.handleFileUpload,isFileUploaded:this.state.isFileUploaded}),this.state.isFileUploaded&&r.a.createElement(r.a.Fragment,null,r.a.createElement(D,{columnsLength:this.state.columns.length,dataLength:this.state.data.length}),r.a.createElement(k,{columns:this.state.columns,polylineColumnId:this.state.polylineColumnId,startTimestampColumnId:this.state.startTimestampColumnId,endTimestampColumnId:this.state.endTimestampColumnId,includePathAnimation:this.state.includePathAnimation,handleChangeOptionValue:this.handleChangeOptionValue}),r.a.createElement(C,null),r.a.createElement(j,null),r.a.createElement(F,{reinitialize:function(){return e.setState(T)}}))))}}]),a}(r.a.Component);o.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(N,null)),document.getElementById("root"))},9:function(e,t,a){e.exports=a.p+"static/media/loading-animation.80a2dbc6.svg"}},[[11,1,2]]]);
//# sourceMappingURL=main.eeab6873.chunk.js.map