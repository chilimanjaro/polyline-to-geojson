{"version":3,"sources":["images/loading-animation.svg","components/ErrorNotification.js","components/DragArea.js","components/FileLoader.js","components/Pagination.js","components/DataEditor.js","components/FileSummary.js","components/ReuploadFile.js","components/SectionOption.js","components/ColumnChooser.js","components/FileExport.js","components/Loading.js","App.js","index.js","components/worker/FileDataWorker.js"],"names":["module","exports","ErrorNotification","setTimeout","props","removeError","index","clearTimeout","className","this","message","onClick","Component","DragArea","id","dragProps","inDragArea","type","accept","onChange","e","handleFile","target","files","htmlFor","FileLoader","handleDragEnter","preventDefault","stopPropagation","dragDepth","dataTransfer","items","length","setState","handleDragLeave","handleDragOver","handleDrop","showError","clearData","file","undefined","handleIsFileLoading","reader","FileReader","fileDataWorker","worker","onload","parseFileData","result","then","handleFileUpload","catch","error","readAsText","errors","state","uuid","filter","onDragEnter","onDragLeave","onDragOver","onDrop","map","key","React","range","start","end","Array","fill","_","handleJumpTo","setPage","setJumpToPage","totalPages","console","log","value","parseInt","isNaN","Pagination","currentPage","rowsPerPage","setRowsPerPage","useState","pageNeighbours","jumpToPage","pages","innerPages","startPage","Math","max","endPage","min","hiddenLeftPages","hiddenRightPages","pagesOffset","extraPages","createPagination","page","onBlur","DataEditor","textFilter","sort","columnId","isAscending","sortByColumnn","a","b","firstValue","secondValue","Date","parse","parseFloat","localeCompare","handleSortColumn","direction","data","row","some","cell","includes","dataStart","dataEnd","partialData","slice","name","placeholder","columns","column","rowIndex","cellIndex","ceil","newPage","newRowsPerPage","FileSummary","style","fontWeight","dataLength","columnsLength","ReuploadFile","reinitialize","SectionOption","show","title","ColumnChooser","handleChangeSectionOption","handleChangeOptionValue","polylineColumnId","checked","includePathAnimation","startTimestampColumnId","endTimestampColumnId","FileExport","fileName","handleFileNameChange","generateGeoJSON","Loading","src","loadingAnimation","alt","initialState","isFileLoading","isFileUploaded","isGenerating","App","property","handleIsGenerating","generateFeatureCollection","saveData","object","json","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","body","appendChild","href","download","click","window","revokeObjectURL","remove","ReactDOM","render","StrictMode","getElementById","addMethods","methods","w","Worker"],"mappings":"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","file":"static/js/main.fdcc6362.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading-animation.80a2dbc6.svg\";","import React, { Component } from 'react'\n\nexport class ErrorNotification extends Component {\n    componentDidMount() {\n        setTimeout(() => this.props.removeError(this.props.index), 5000);\n    }\n\n    componentWillUnmount() {\n        clearTimeout();\n    }\n\n    render() {\n        return (\n            <div className=\"error\">{this.props.message} <div className=\"close\" onClick={() => this.props.removeError(this.props.index)}/></div>\n        )\n    }\n}\n\nexport default ErrorNotification\n","import React, { Component } from 'react'\n\nexport class DragArea extends Component {\n    render() {\n        return (\n            <div id=\"drop-area\" {...this.props.dragProps} className={this.props.inDragArea ? \"active\" : \"\"}>\n                <input id=\"file-chooser-input\" type=\"file\" accept=\".csv\" onChange={e => this.props.handleFile(e.target.files[0])} />\n                <label className=\"drag-area-button\" htmlFor=\"file-chooser-input\">\n                    Drag your file here or click here to choose it from the list.\n                </label>\n                <div id=\"drag-area-overlay\" className={this.props.inDragArea ? \"active\" : \"\"}>\n                    <div className=\"drag-area-overlay-text\">\n                        Drop your file here.\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DragArea\n","import React from 'react'\nimport ErrorNotification from './ErrorNotification';\nimport { v4 as uuid } from 'uuid'\nimport DragArea from './DragArea';\nimport worker from 'workerize-loader!./worker/FileDataWorker' // eslint-disable-line import/no-webpack-loader-syntax\n\nclass FileLoader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inDragArea: false,\n            errors: []\n        }\n    \n        this.dragDepth = 0;\n    \n        this.dragProps = {\n            onDragEnter: this.handleDragEnter,\n            onDragLeave: this.handleDragLeave,\n            onDragOver: this.handleDragOver,\n            onDrop: this.handleDrop\n        }\n    }\n\n    handleDragEnter = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth++;\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({inDragArea: true});\n        }\n    }\n\n    handleDragLeave = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth--;\n        if(this.dragDepth > 0) return;\n        \n        this.setState({inDragArea: false});\n    }\n\n    handleDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        \n    }\n\n    handleDrop = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({inDragArea: false});\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            if(e.dataTransfer.items.length > 1)\n                this.showError(\"Dragged too many files.\")\n            else\n                this.handleFile(e.dataTransfer.files[0]);\n\n            e.dataTransfer.clearData();\n            this.dragDepth = 0;\n        }\n    }\n\n    handleFile = file => {\n        if(file !== null && file !== undefined) {\n            if(file.type !== \"text/csv\") return this.showError(\"Uploaded file is not a CSV file.\")\n\n            this.props.handleIsFileLoading(true);\n            var reader = new FileReader();\n            var fileDataWorker = worker();\n\n            reader.onload = e => {\n                fileDataWorker.parseFileData(e.target.result)\n                    .then(result => {\n                        this.props.handleFileUpload(result)\n                    })\n                    .catch(error => {\n                        this.showError(error.message);\n                        this.props.handleIsFileLoading(false);\n                    })\n            }\n\n            reader.readAsText(file);\n        }\n    }\n\n    showError = message => {\n        const errors = this.state.errors;\n        this.setState({ errors : [...errors, {\n            id: uuid(),\n            message\n        }] })\n    }\n\n    removeError = id => {\n        const errors = this.state.errors.filter(error => error.id !== id);\n        this.setState({ errors : [...errors] })\n    }\n\n    render() {\n        return (\n            <div id=\"file-loader\">\n                <DragArea dragProps={this.dragProps} inDragArea={this.state.inDragArea} handleFile={this.handleFile} />\n                <div className=\"error-group\">\n                    {this.state.errors.map(error => <ErrorNotification key={error.id} message={error.message} index={error.id} removeError={this.removeError} />)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileLoader;","import React, { useState } from 'react'\n\nconst range = (start, end) => {\n    return new Array(end - start + 1).fill().map((_, index) => start + index);\n}\n\nconst createPagination = (pageNeighbours, totalPages, currentPage) => {\n    const innerPages = pageNeighbours * 2 + 3;\n    const visiblePages = innerPages + 2;\n\n    if(totalPages > visiblePages) {\n        const startPage = Math.max(2, currentPage - pageNeighbours);\n        const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n        let pages = range(startPage, endPage);\n\n        const hiddenLeftPages = startPage > 2;\n        const hiddenRightPages = (totalPages - endPage) > 1;\n        const pagesOffset = innerPages - (pages.length + 1);\n\n        switch(true) {\n            case (!hiddenLeftPages && hiddenRightPages): {\n                let extraPages = range(endPage + 1, endPage + pagesOffset);\n                pages = [...pages, ...extraPages, 'RIGHT']\n                break;\n            }\n\n            case (hiddenLeftPages && !hiddenRightPages): {\n                let extraPages = range(startPage - pagesOffset, startPage - 1);\n                pages = ['LEFT', ...extraPages, ...pages]\n                break;\n            }\n\n            case (hiddenLeftPages && hiddenRightPages):\n            default: {\n                pages = ['LEFT', ...pages, 'RIGHT'];\n                break;\n            }\n        }\n\n        return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n}\n\nconst handleJumpTo = (e, setPage, setJumpToPage, totalPages) => {\n    console.log(e.type)\n    e.preventDefault();\n    var value = parseInt(e.target.value);\n\n    if(e.type === 'blur' || e.key === 'enter') {\n        if(value > totalPages) value = totalPages;\n        if(value < 1) value = 1;\n        !isNaN(value) && setPage(value);\n        setJumpToPage('');\n        return;\n    }\n\n    console.log(value);\n    !isNaN(value) ? setJumpToPage(value) : setJumpToPage('');\n}\n\nexport default function Pagination({ currentPage, totalPages, rowsPerPage, setPage, setRowsPerPage }) {\n    const [pageNeighbours] = useState(1);\n    const [jumpToPage, setJumpToPage] = useState('');\n    const pages = createPagination(pageNeighbours, totalPages, currentPage);\n\n    return (\n        <div className=\"pagination\">\n            {pages.map(page => {\n                if(page === 'LEFT') return <button className=\"arrow\" onClick={() => setPage(currentPage - pageNeighbours - 1)} key={page}>←</button>\n                if(page === 'RIGHT') return <button className=\"arrow\" onClick={() => setPage(currentPage + pageNeighbours + 1)} key={page}>→</button>\n                return <button className={page === currentPage ? 'active' : undefined} onClick={() => setPage(page)} key={page}>{page}</button>\n            })}\n            <div className=\"select-wrapper fit-content\">\n                <select value={rowsPerPage} onChange={e => setRowsPerPage(parseInt(e.target.value))}>\n                    <option value={20}>20/page</option>\n                    <option value={50}>50/page</option>\n                    <option value={100}>100/page</option>\n                </select>\n            </div>\n            <span className=\"desc\">Jump To:</span>\n            <input type=\"number\" min={1} max={totalPages} value={jumpToPage} onChange={e => handleJumpTo(e, setPage, setJumpToPage, totalPages)} onBlur={e => handleJumpTo(e, setPage, setJumpToPage, totalPages)} />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Pagination from './Pagination';\n\nexport class DataEditor extends Component {\n    state = {\n        currentPage: 1,\n        rowsPerPage: 50,\n        textFilter: '',\n        sort: {\n            columnId: null,\n            isAscending: false,\n        }\n    }\n\n    sortByColumnn = (a, b) => {\n        var firstValue = a[this.state.sort.columnId], secondValue = b[this.state.sort.columnId];\n\n        if(!isNaN(Date.parse(firstValue)) && !isNaN(Date.parse(secondValue))) {\n            firstValue = Date.parse(firstValue);\n            secondValue = Date.parse(secondValue);\n\n            if(this.state.sort.isAscending) return firstValue - secondValue;\n            return secondValue - firstValue;\n        }\n\n        if(!isNaN(parseFloat(firstValue)) && !isNaN(parseFloat(secondValue))) {\n            firstValue = parseFloat(firstValue);\n            secondValue = parseFloat(secondValue);\n\n            if(this.state.sort.isAscending) return firstValue - secondValue;\n            return secondValue - firstValue;\n        }\n\n        if(this.state.sort.isAscending) return firstValue.localeCompare(secondValue);\n        return secondValue.localeCompare(firstValue);\n    }\n\n    handleSortColumn = (e, index) => {\n        e.preventDefault();\n        let direction = this.state.sort.isAscending === true && this.state.sort.columnId === index ? false : true;\n        this.setState({ sort: { columnId: index, isAscending: direction }});\n    }\n\n    render() {\n        var data = [];\n        \n        if(this.state.textFilter !== '') data = this.props.data.filter(row => row.some(cell => cell.includes(this.state.textFilter)))\n        else data = this.props.data;\n        \n        if(this.state.sort.columnId !== null) data.sort(this.sortByColumnn);\n\n        const dataStart = (this.state.currentPage - 1) * this.state.rowsPerPage;\n        const dataEnd = dataStart + this.state.rowsPerPage;\n        const partialData = data.slice(dataStart, dataEnd);\n\n        return (\n            <div className=\"section\">\n                <h2>Data View</h2>\n                <div className=\"data-editor\">\n                    <div className=\"filters\">\n                        <div className=\"input-icon\">\n                            <span className=\"icon search-icon\"></span>\n                            <input id=\"filterText\" name=\"filterText\" value={this.state.textFilter} onChange={e => this.setState({ textFilter: e.target.value })} placeholder=\"Filter table...\" type=\"text\" />\n                        </div>\n                    </div>\n                    <div className=\"table\">\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    {this.props.columns.map((column,index) => {\n                                        return <th\n                                            key={`th-${index}`}\n                                            onClick={e => this.handleSortColumn(e, index)}\n                                            className={this.state.sort.columnId === index ? (this.state.sort.isAscending ? 'asc' : 'desc') : undefined}\n                                        >{column} {this.state.sort.columnId === index && <span className=\"arrow\"></span>}</th>\n                                        })}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {partialData.map((row, rowIndex) => {\n                                    return <tr key={`tr-${rowIndex}`}>\n                                        <td>{dataStart + rowIndex + 1}</td>\n                                        {row.map((cell, cellIndex)=> <td key={`td-${cellIndex}`}>{cell}</td>)}\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination\n                        currentPage={this.state.currentPage}\n                        totalPages={Math.ceil(data.length / this.state.rowsPerPage)}\n                        rowsPerPage={this.state.rowsPerPage}\n                        setPage={newPage => this.setState({ currentPage: newPage })}\n                        setRowsPerPage={newRowsPerPage => this.setState({ rowsPerPage: newRowsPerPage })}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataEditor\n","import React, { Component } from 'react'\n\nexport class FileSummary extends Component {\n    render() {\n        return (\n            <div className=\"section\">\n                <h2 className=\"success\">File uploaded successfully!</h2>\n                <div className=\"section-content\">\n                    Found <span style={{fontWeight: \"bold\"}}>{this.props.dataLength}</span> rows and <span style={{fontWeight: \"bold\"}}>{this.props.columnsLength}</span> columns in uploaded file. Columns for Polyline, start timestamp and end timestamp should be assigned automatically if they were found. You can modify it below if it was done incorrectly.\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileSummary\n","import React, { Component } from 'react'\n\nexport class ReuploadFile extends Component {\n    render() {\n        return (\n            <div className=\"reupload-file\">\n                <div className=\"desc\">\n                    Want to upload a new CSV file?\n                </div>\n                <button onClick={() => this.props.reinitialize()}>Click here</button>\n            </div>\n        )\n    }\n}\n\nexport default ReuploadFile\n","import React, { Component } from 'react'\n\nexport class SectionOption extends Component {\n    render() {\n        return (\n            <>\n                {this.props.show && (<div className=\"section-option\">\n                    <label htmlFor={this.props.id}>{this.props.title}</label>\n                    <div className=\"select-wrapper\">\n                        <select id={this.props.id} name={this.props.id} value={this.props.value} onChange={this.props.onChange}>\n                            <option value={null}></option>\n                            {this.props.columns.map((column, index) => <option key={index} value={index}>{column}</option>)}\n                        </select>\n                    </div>\n                </div>)}\n            </>\n        )\n    }\n}\n\nexport default SectionOption\n","import React, { Component } from 'react'\nimport SectionOption from './SectionOption'\n\nexport class ColumnChooser extends Component {\n    handleChangeSectionOption = e => {\n        var value = parseInt(e.target.value);\n        if(isNaN(value)) value = null\n        this.props.handleChangeOptionValue(e.target.name, value);\n    }\n\n    render() {\n        return (\n            <div className=\"section\">\n                <h2>Choose columns</h2>\n                <div className=\"section-content\">\n                    <SectionOption id=\"polylineColumnId\" title=\"Polyline\" value={this.props.polylineColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={true} />\n\n                    <div className=\"section-option\">\n                        <label htmlFor=\"includePathAnimation\">Include Path Animation?</label>\n                        <input type=\"checkbox\" id=\"includePathAnimation\" name=\"includePathAnimation\" checked={this.props.includePathAnimation} onChange={e => this.props.handleChangeOptionValue(e.target.name, e.target.checked)} />\n                        <div className=\"section-description\">\n                            Checking this checkbox include start and end date in GeoJSON coordinates. Thanks to this, animating path through time will be possible.\n                        </div>\n                    </div>\n\n                    <SectionOption id=\"startTimestampColumnId\" title=\"Start Timestamp\" value={this.props.startTimestampColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={this.props.includePathAnimation} />\n                    <SectionOption id=\"endTimestampColumnId\" title=\"End Timestamp\" value={this.props.endTimestampColumnId} onChange={this.handleChangeSectionOption} columns={this.props.columns} show={this.props.includePathAnimation} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ColumnChooser\n","import React, { Component } from 'react'\n\nexport class FileExport extends Component {\n    render() {\n        return (\n            <div className=\"section\">\n                <h2>Export File</h2>\n                <div className=\"section\">\n                    <div className=\"section-content\">\n                        Set filename and click generate to download GeoJSON file.\n                        <div className=\"section-option\">\n                            <label htmlFor=\"fileName\">Filename</label>\n                            <input id=\"fileName\" name=\"fileName\" type=\"text\" value={this.props.fileName} onChange={e => this.props.handleFileNameChange(e.target.value)} />\n                            <button className=\"inline\" onClick={this.props.generateGeoJSON}>Generate GeoJSON</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FileExport\n","import React from 'react'\nimport loadingAnimation from '../images/loading-animation.svg'\n\nfunction Loading(props) {\n    return (\n        <div className=\"loading\">\n            <img src={loadingAnimation} alt=\"Loading animation\" />\n            Please wait\n        </div>\n    )\n}\n\nexport default Loading\n\n","import React from 'react';\nimport FileLoader from './components/FileLoader';\nimport DataEditor from './components/DataEditor';\nimport FileSummary from './components/FileSummary';\nimport ReuploadFile from './components/ReuploadFile';\nimport ColumnChooser from './components/ColumnChooser';\nimport FileExport from './components/FileExport';\nimport Loading from './components/Loading';\nimport worker from 'workerize-loader!./components/worker/FileDataWorker' // eslint-disable-line import/no-webpack-loader-syntax\n\nconst initialState = {\n  columns: [],\n  data: [],\n  polylineColumnId: null,\n  startTimestampColumnId: null,\n  endTimestampColumnId: null,\n  includePathAnimation: false,\n\n  isFileLoading: false,\n  isFileUploaded: false,\n  isGenerating: false,\n\n  fileName: 'decoded-data'\n}\n\nclass App extends React.Component {\n  state = initialState;\n\n  handleFileUpload = ({columns = [], data = [], polylineColumnId = null, startTimestampColumnId = null, endTimestampColumnId = null}) => {\n    this.setState({\n      columns,\n      data,\n      polylineColumnId,\n      startTimestampColumnId,\n      endTimestampColumnId,\n      isFileUploaded: true,\n      isFileLoading: false\n    })\n  }\n\n  handleChangeOptionValue = (property, value) => this.setState({ [property]: value})\n  handleIsFileLoading = value => this.setState({ isFileLoading: value })\n  handleIsGenerating = value => this.setState({ isGenerating: value })\n  handleFileNameChange = value => this.setState({ fileName: value })\n\n  generateGeoJSON = e => {\n      e.preventDefault();\n      this.handleIsGenerating(true);\n      var fileDataWorker = worker();\n\n      fileDataWorker.generateFeatureCollection(this.state.data, this.state.columns, this.state.polylineColumnId, this.state.startTimestampColumnId, this.state.endTimestampColumnId, this.state.includePathAnimation)\n          .then(result => {\n              this.saveData(result);\n              this.handleIsGenerating(false);\n          }).catch(error => {\n              console.log(error.message);\n              this.handleIsGenerating(false);\n          })\n  }\n\n  saveData = object => {\n      var json = JSON.stringify(object);\n      var blob = new Blob([json], {type: \"application/json\"});\n      var url  = URL.createObjectURL(blob);\n\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      if(!this.state.fileName) {\n          console.log(\"File name is empty\")\n          return;\n      }\n      a.download = `${this.state.fileName}.geojson`;\n      a.click();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"section\">\n            <h1>Polyline to GeoJSON Decoder</h1>\n            <div className=\"section-content\">Upload CSV file that contains Polyline values, which will be used to convert to GeoJSON coordinates. Optionally, your file can contain start timestamp and end timestamp for animating paths. Every available column will be converted into Feature properties.</div>\n        </div>\n        <div className=\"content\">\n          {(!this.state.isFileLoading && !this.state.isFileUploaded && !this.state.isGenerating) &&\n            <FileLoader\n              handleFileUpload={this.handleFileUpload}\n              handleIsFileLoading={this.handleIsFileLoading}\n            />}\n          {(!this.state.isFileLoading && this.state.isFileUploaded && !this.state.isGenerating) &&\n            <>\n              <FileSummary\n                columnsLength={this.state.columns.length}\n                dataLength={this.state.data.length}\n              />\n              <FileExport\n                generateGeoJSON={this.generateGeoJSON}\n                fileName={this.state.fileName}\n                handleFileNameChange={this.handleFileNameChange}\n              />\n              <ColumnChooser\n                columns={this.state.columns}\n                polylineColumnId={this.state.polylineColumnId}\n                startTimestampColumnId={this.state.startTimestampColumnId}\n                endTimestampColumnId={this.state.endTimestampColumnId}\n                includePathAnimation={this.state.includePathAnimation}\n                handleChangeOptionValue={this.handleChangeOptionValue}\n              />\n              <DataEditor\n                columns={this.state.columns}\n                data={this.state.data}\n              />\n              <ReuploadFile reinitialize={() => this.setState(initialState)} />\n            </>\n          }\n          {(this.state.isGenerating || this.state.isFileLoading) && <Loading />}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"parseFileData\",\"generateFeatureCollection\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"6c75435e0729bf84e3d5.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}