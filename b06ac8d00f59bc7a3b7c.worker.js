!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/polyline-to-geojson/",r(r.s=1)}([function(e,t,r){"use strict";var n={};function o(e){return Math.floor(Math.abs(e)+.5)*(e>=0?1:-1)}function a(e,t,r){var n=(e=o(e*r))-(t=o(t*r));n<<=1,e-t<0&&(n=~n);for(var a="";n>=32;)a+=String.fromCharCode(63+(32|31&n)),n>>=5;return a+=String.fromCharCode(n+63)}function i(e){for(var t=[],r=0;r<e.length;r++)t.push(e[r].slice().reverse());return t}n.decode=function(e,t){for(var r,n=0,o=0,a=0,i=[],u=0,s=0,l=null,c=Math.pow(10,Number.isInteger(t)?t:5);n<e.length;){l=null,u=0,s=0;do{s|=(31&(l=e.charCodeAt(n++)-63))<<u,u+=5}while(l>=32);r=1&s?~(s>>1):s>>1,u=s=0;do{s|=(31&(l=e.charCodeAt(n++)-63))<<u,u+=5}while(l>=32);o+=r,a+=1&s?~(s>>1):s>>1,i.push([o/c,a/c])}return i},n.encode=function(e,t){if(!e.length)return"";for(var r=Math.pow(10,Number.isInteger(t)?t:5),n=a(e[0][0],0,r)+a(e[0][1],0,r),o=1;o<e.length;o++){var i=e[o],u=e[o-1];n+=a(i[0],u[0],r),n+=a(i[1],u[1],r)}return n},n.fromGeoJSON=function(e,t){if(e&&"Feature"===e.type&&(e=e.geometry),!e||"LineString"!==e.type)throw new Error("Input must be a GeoJSON LineString");return n.encode(i(e.coordinates),t)},n.toGeoJSON=function(e,t){return{type:"LineString",coordinates:i(n.decode(e,t))}},e.exports&&(e.exports=n)},function(e,t,r){"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function o(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(r):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}function a(e){return function(e){if(Array.isArray(e))return n(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||o(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}r.r(t),r.d(t,"parseFileData",(function(){return l})),r.d(t,"generateFeatureCollection",(function(){return c}));var i={general:["DATE","AT","TIMESTAMP","FROM"],startDate:["START","STARTED"],endDate:["END","ENDED","COMPLETED"]},u=r(0),s=r.n(u),l=function(e){if(""===e||null===e||void 0===e)throw new Error("Uploaded file has no data inside.");var t=e.split("\n");if(t.filter((function(e){return""!==e})),1===t.length)throw new Error("Uploaded file consists of only column names.");if(t.length>5e5)throw new Error("Uploaded file has more than 100000 rows. Please upload smaller file.");var r=t[0].split(","),n=t.slice(1).map((function(e,t){return{index:t,values:e.split(",")}})),o=r.findIndex((function(e){return e.toUpperCase().match(/(POLYLINE)/g)}));-1===o&&(o="");var a=i.general.concat(i.startDate).join("|"),u=new RegExp("(?<=(^|[_\\s]))(".concat(a,")(?=($|[_\\s]))\\S+(?<=(^|[_\\s]))(").concat(a,")(?=($|[_\\s]))"),"g"),s=r.findIndex((function(e){return e.toUpperCase().match(u)}));-1===s&&(s="");var l=i.general.concat(i.endDate).join("|"),c=new RegExp("(?<=(^|[_\\s]))(".concat(l,")(?=($|[_\\s]))\\S+(?<=(^|[_\\s]))(").concat(l,")(?=($|[_\\s]))"),"g"),f=r.findIndex((function(e){return e.toUpperCase().match(c)}));return-1===f&&(f=""),{columns:r,data:n,polylineColumnId:o,startTimestampColumnId:s,endTimestampColumnId:f}},c=function(e,t,r,n,i,u){var l,c={type:"FeatureCollection",features:[]},f=function(e){if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=o(e))){var t=0,r=function(){};return{s:r,n:function(){return t>=e.length?{done:!0}:{done:!1,value:e[t++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,a,i=!0,u=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){u=!0,a=e},f:function(){try{i||null==n.return||n.return()}finally{if(u)throw a}}}}(e);try{var d=function(){var e=l.value,o={type:"Feature",properties:Object.assign.apply(Object,a(t.map((function(t,r){return n={},o=t,a=e.values[r],o in n?Object.defineProperty(n,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[o]=a,n;var n,o,a})))),geometry:null},f=s.a.toGeoJSON(e.values[r]);if(u&&n&&i&&!isNaN(Date.parse(e.values[n]))&&!isNaN(Date.parse(e[i]))){var d=Date.parse(e.values[n]),p=Date.parse(e.values[i]),m=Math.floor((p-d)/f.coordinates.length);f.coordinates.map((function(e,t){return e.push(1),e.push(d+t*m),e}))}o.geometry=f,c.features.push(o)};for(f.s();!(l=f.n()).done;)d()}catch(p){f.e(p)}finally{f.f()}return c};addEventListener("message",(function(e){var r,n=e.data,o=n.type,a=n.method,i=n.id,u=n.params;"RPC"===o&&a&&((r=t[a])?Promise.resolve().then((function(){return r.apply(t,u)})):Promise.reject("No such method")).then((function(e){postMessage({type:"RPC",id:i,result:e})})).catch((function(e){var t={message:e};e.stack&&(t.message=e.message,t.stack=e.stack,t.name=e.name),postMessage({type:"RPC",id:i,error:t})}))})),postMessage({type:"RPC",method:"ready"})}]);
//# sourceMappingURL=b06ac8d00f59bc7a3b7c.worker.js.map